{"version":3,"sources":["app/views/utilities/Typography.jsx"],"names":["Typography","className","routeSegments","name","path","title","Array","keys","slice","reverse","map","item","index","key","ReactHtmlParser","description","ind","replace"],"mappings":"2QAmJeA,UAvII,WAgDf,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACIC,cAAe,CACX,CAAEC,KAAM,YAAaC,KAAM,cAC3B,CAAED,KAAM,kBAKpB,kBAAC,IAAD,CAAYE,MAAM,cACd,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUJ,UAAU,cAChB,kBAAC,IAAD,CAAWA,UAAU,QAArB,cACA,kBAAC,IAAD,CAAWA,UAAU,QAArB,QACA,kBAAC,IAAD,CAAWA,UAAU,QAArB,aAGR,kBAAC,IAAD,KACK,YAAIK,MAAM,GAAGC,QACTC,MAAM,GACNC,UACAC,KAAI,SAACC,EAAMC,GAAP,OACD,kBAAC,IAAD,CAAUC,IAAKD,GACX,kBAAC,IAAD,CAAWX,UAAU,QAArB,IACMU,GAEN,kBAAC,IAAD,CAAWV,UAAU,oBACrB,kBAAC,IAAD,CAAWA,UAAU,mBAChBa,IAAgB,KAAD,OACPH,EADO,aACEA,EADF,cACYA,EADZ,WAMhC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWV,UAAU,QAArB,cACA,kBAAC,IAAD,CAAWA,UAAU,mBAArB,aAGA,kBAAC,IAAD,CAAWA,UAAU,mBACjB,0BAAMA,UAAU,cAAhB,gBAIP,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIS,KAClC,SAACC,EAAMC,GAAP,OACI,kBAAC,IAAD,CAAUC,IAAKD,GACX,kBAAC,IAAD,CAAWX,UAAU,QAArB,QACUU,GAEV,kBAAC,IAAD,CAAWV,UAAU,mBAChBU,EADL,MAGA,kBAAC,IAAD,CAAWV,UAAU,mBAChBa,IAAgB,qBAAD,OACSH,EADT,kBACuBA,EADvB,mBAUxC,yBAAKV,UAAU,SAlHhB,CACP,CACIA,UAAW,cACXc,YAAa,oBAEjB,CACId,UAAW,eACXc,YAAa,uBAEjB,CACId,UAAW,eACXc,YAAa,oBAEjB,CACId,UAAW,iBACXc,YAAa,oBAEjB,CACId,UAAW,aACXc,YAAa,oBAEjB,CACId,UAAW,cACXc,YAAa,qBAEjB,CACId,UAAW,aACXc,YAAa,oBAEjB,CACId,UAAW,aACXc,YAAa,oBAEjB,CACId,UAAW,kBACXc,YAAa,oBAEjB,CACId,UAAW,uBACXc,YAAa,yBAEjB,CACId,UAAW,sBACXc,YAAa,wBAwEHL,KAAI,SAACC,EAAMK,GAAP,OACN,yBACIH,IAAKG,EACLf,UAAU,+CAEV,8BAAOU,EAAKV,WACZ,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAWA,UAAU,QAArB,0BAAgDU,EAAKV,UAAUgB,QAC3D,IACA,IAFJ,aAGMN,EAAKI,YAHX","file":"static/js/30.bb80421e.chunk.js","sourcesContent":["import React from 'react'\nimport ReactHtmlParser from 'react-html-parser'\nimport {\n    Table,\n    TableHead,\n    TableCell,\n    TableBody,\n    TableRow,\n} from '@material-ui/core'\nimport { Breadcrumb, SimpleCard } from 'app/components'\nimport Highlight from 'react-highlight'\n\nconst Typography = () => {\n    let list = [\n        {\n            className: '.font-light',\n            description: 'font-weight: 300',\n        },\n        {\n            className: '.font-normal',\n            description: 'font-weight: normal',\n        },\n        {\n            className: '.font-medium',\n            description: 'font-weight: 500',\n        },\n        {\n            className: '.font-semibold',\n            description: 'font-weight: 600',\n        },\n        {\n            className: '.font-bold',\n            description: 'font-weight: 700',\n        },\n        {\n            className: '.capitalize',\n            description: 'Capitalize String',\n        },\n        {\n            className: '.uppercase',\n            description: 'UPPERCASE STRING',\n        },\n        {\n            className: '.lowercase',\n            description: 'lowercase string',\n        },\n        {\n            className: '.whitespace-pre',\n            description: 'white-space: pre',\n        },\n        {\n            className: '.whitespace-pre-wrap',\n            description: 'white-space: pre-wrap',\n        },\n        {\n            className: '.whitespace-no-wrap',\n            description: 'white-space: nowrap',\n        },\n    ]\n\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Utilities', path: '/utilities' },\n                        { name: 'Typography' },\n                    ]}\n                />\n            </div>\n\n            <SimpleCard title=\"typography\">\n                <Table>\n                    <TableHead>\n                        <TableRow className=\"bg-default\">\n                            <TableCell className=\"px-0\">Class Name</TableCell>\n                            <TableCell className=\"px-0\">Size</TableCell>\n                            <TableCell className=\"px-0\">Example</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {[...Array(7).keys()]\n                            .slice(1)\n                            .reverse()\n                            .map((item, index) => (\n                                <TableRow key={index}>\n                                    <TableCell className=\"px-0\">\n                                        h{item}\n                                    </TableCell>\n                                    <TableCell className=\"px-0 capitalize\"></TableCell>\n                                    <TableCell className=\"px-0 capitalize\">\n                                        {ReactHtmlParser(\n                                            `<h${item}>h${item}</h${item}>`\n                                        )}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        <TableRow>\n                            <TableCell className=\"px-0\">text-small</TableCell>\n                            <TableCell className=\"px-0 capitalize\">\n                                0.8125rem\n                            </TableCell>\n                            <TableCell className=\"px-0 capitalize\">\n                                <span className=\"text-small\">text-small</span>\n                            </TableCell>\n                        </TableRow>\n\n                        {[13, 14, 16, 18, 20, 22, 24, 30, 32].map(\n                            (item, index) => (\n                                <TableRow key={index}>\n                                    <TableCell className=\"px-0\">\n                                        text-{item}\n                                    </TableCell>\n                                    <TableCell className=\"px-0 capitalize\">\n                                        {item}px\n                                    </TableCell>\n                                    <TableCell className=\"px-0 capitalize\">\n                                        {ReactHtmlParser(\n                                            `<span class=\"text-${item}\">text-${item}</span>`\n                                        )}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        )}\n                    </TableBody>\n                </Table>\n\n                <div className=\"py-2\"></div>\n                {list.map((item, ind) => (\n                    <div\n                        key={ind}\n                        className=\"flex items-center flex-wrap justify-between\"\n                    >\n                        <code>{item.className}</code>\n                        <div className=\"highlight-js\">\n                            <Highlight className=\"html\">{`<div className=\"${item.className.replace(\n                                '.',\n                                ''\n                            )}\">${item.description}</div>`}</Highlight>\n                        </div>\n                    </div>\n                ))}\n            </SimpleCard>\n        </div>\n    )\n}\n\nexport default Typography\n"],"sourceRoot":""}