{"version":3,"sources":["app/contexts/NotificationContext.js","app/hooks/useNotification.js","app/components/NotificationBar/NotificationBar.jsx","app/components/ShoppingCart/ShoppingCart.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/Sidenav/Sidenav.jsx","app/components/Brand/Brand.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/Footer/Footer.jsx","app/components/SecondarySidebar/SecondarySidebarToggle.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"names":["reducer","state","action","type","notifications","payload","NotificationContext","createContext","deleteNotification","clearNotifications","getNotifications","createNotification","NotificationProvider","settings","children","useReducer","dispatch","notificationID","a","axios","post","id","res","data","console","error","get","notification","useEffect","Provider","value","useNotification","useContext","useStyles","makeStyles","palette","width","height","notificationCard","cursor","display","right","marginTop","top","zIndex","position","borderRadius","opacity","NotificationBar","container","React","useState","panelOpen","setPanelOpen","classes","useSettings","handleDrawerToggle","IconButton","onClick","Badge","color","badgeContent","length","Icon","ThemeProvider","theme","themes","activeTheme","Drawer","variant","anchor","open","onClose","ModalProps","keepMounted","className","map","key","clsx","size","fontSize","to","path","Card","elevation","icon","name","heading","getTimeDifference","Date","timestamp","title","subtitle","Button","miniCart","transition","background","cartListLoaded","ShoppingCart","totalCost","setTotalCost","useDispatch","history","useHistory","user","useAuth","cartList","useSelector","ecommerce","getCartList","total","forEach","product","price","amount","updateCartAmount","disabled","src","imgUrl","alt","deleteProductFromCart","userId","push","toFixed","topbar","backgroundColor","primary","main","paddingLeft","paddingRight","breakpoints","down","boxShadow","shadows","userMenu","alignItems","padding","margin","menuItem","minWidth","memo","useTheme","updateSettings","logout","isMdScreen","useMediaQuery","fixed","layout1Settings","mode","sidebarSettings","leftSidebar","menuButton","Hidden","xsDown","Avatar","avatar","MenuItem","scrollable","sidenavMobileOverlay","left","bottom","up","Sidenav","options","suppressScrollX","items","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","updateSidebarMode","brand","hideOnCompact","Brand","sidenavHoverShow","sidenav","primaryRGB","bgImgURL","backgroundRepeat","backgroundPosition","backgroundSize","overflow","text","backgroundImage","maxWidth","userInfo","convertHexToRGB","getSidenavWidth","smDown","Switch","onChange","checked","footer","minHeight","flexDirection","appbar","Footer","footerTheme","AppBar","Toolbar","href","toggle","SecondarySidebarToggle","secondarySidebar","aria-label","Fab","BadgeSelected","withStyles","badge","label","secondary","dark","fontWeight","transform","marginBottom","letterSpacing","contrastText","helpText","maxCustomizer","customizerCloseButton","layoutBox","justifyContent","demoLayouts","thumbnail","isPro","bgOpacity","layout2Settings","MatxCustomizer","props","setOpen","tabIndex","setTabIndex","tooglePanel","handleTabChange","index","Tooltip","placement","layout","invisible","Link","target","root","marginRight","SecondarySidebarContent","SecondarySidenavTheme","SecondarySidebar","secondarySidebarTheme","SidenavTheme","sidenavTheme","contentWrap","verticalAlign","marginLeft","sidenavMode","showSidenav","show","routes","AppContext","sidenavWidth","ref","useRef","topbarTheme","layoutClasses","current","sidebarMode","perfectScrollbar","renderRoutes"],"mappings":"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","file":"static/js/31.659de410.chunk.js","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOAD_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'DELETE_NOTIFICATION': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        case 'CLEAR_NOTIFICATIONS': {\n            return {\n                ...state,\n                notifications: action.payload,\n            }\n        }\n        default: {\n            return { ...state }\n        }\n    }\n}\n\nconst NotificationContext = createContext({\n    notifications: [],\n    deleteNotification: () => {},\n    clearNotifications: () => {},\n    getNotifications: () => {},\n    createNotification: () => {},\n})\n\nexport const NotificationProvider = ({ settings, children }) => {\n    const [state, dispatch] = useReducer(reducer, [])\n\n    const deleteNotification = async (notificationID) => {\n        try {\n            const res = await axios.post('/api/notification/delete', {\n                id: notificationID,\n            })\n            dispatch({\n                type: 'DELETE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const clearNotifications = async () => {\n        try {\n            const res = await axios.post('/api/notification/delete-all')\n            dispatch({\n                type: 'CLEAR_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    const getNotifications = async () => {\n        try {\n            const res = await axios.get('/api/notification')\n            dispatch({\n                type: 'LOAD_NOTIFICATIONS',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n    const createNotification = async (notification) => {\n        try {\n            const res = await axios.post('/api/notification/add', {\n                notification,\n            })\n            dispatch({\n                type: 'CREATE_NOTIFICATION',\n                payload: res.data,\n            })\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        getNotifications()\n    }, [])\n\n    return (\n        <NotificationContext.Provider\n            value={{\n                notifications: state.notifications,\n                deleteNotification,\n                clearNotifications,\n                getNotifications,\n                createNotification,\n            }}\n        >\n            {children}\n        </NotificationContext.Provider>\n    )\n}\n\nexport default NotificationContext\n","import { useContext } from 'react'\nimport NotificationContext from 'app/contexts/NotificationContext'\n\nconst useNotification = () => useContext(NotificationContext)\n\nexport default useNotification\n","import React, { Fragment } from 'react'\n\nimport {\n    Icon,\n    Badge,\n    Card,\n    Button,\n    IconButton,\n    Drawer,\n} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { getTimeDifference } from 'utils.js'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\nimport useNotification from 'app/hooks/useNotification'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    notification: {\n        width: 'var(--sidenav-width)',\n        '& .notification__topbar': {\n            height: 'var(--topbar-height)',\n        },\n    },\n    notificationCard: {\n        '&:hover': {\n            '& .delete-button': {\n                cursor: 'pointer',\n                display: 'unset',\n                right: 0,\n                marginTop: 6,\n                top: 0,\n                zIndex: 2,\n            },\n            '& .card__topbar__time': {\n                display: 'none',\n            },\n        },\n        '& .delete-button': {\n            display: 'none',\n            position: 'absolute',\n            right: 0,\n            marginTop: 9,\n        },\n        '& .card__topbar__button': {\n            borderRadius: 15,\n            opacity: 0.9,\n        },\n    },\n}))\n\nconst NotificationBar = ({ container }) => {\n    const [panelOpen, setPanelOpen] = React.useState(false)\n\n    const classes = useStyles()\n    const { settings } = useSettings()\n    const {\n        deleteNotification,\n        clearNotifications,\n        notifications,\n    } = useNotification()\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" badgeContent={notifications?.length}>\n                    <Icon>notifications</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    width={'100px'}\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div className={classes.notification}>\n                        <div className=\"notification__topbar elevation-z6 flex items-center p-4 mb-4\">\n                            <Icon color=\"primary\">notifications</Icon>\n                            <h5 className=\"ml-2 my-0 font-medium\">\n                                Notifications\n                            </h5>\n                        </div>\n\n                        {notifications?.map((notification) => (\n                            <div\n                                key={notification.id}\n                                className={clsx(\n                                    'relative',\n                                    classes.notificationCard\n                                )}\n                            >\n                                <IconButton\n                                    size=\"small\"\n                                    className=\"delete-button bg-light-gray mr-6\"\n                                    onClick={() =>\n                                        deleteNotification(notification.id)\n                                    }\n                                >\n                                    <Icon\n                                        className=\"text-muted\"\n                                        fontSize=\"small\"\n                                    >\n                                        clear\n                                    </Icon>\n                                </IconButton>\n                                <Link\n                                    to={`/${notification.path}`}\n                                    onClick={handleDrawerToggle}\n                                >\n                                    <Card className=\"mx-4 mb-6\" elevation={3}>\n                                        <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\n                                            <div className=\"flex items-center\">\n                                                <div className=\"card__topbar__button flex items-center justify-between h-24 w-24 overflow-hidden\">\n                                                    <Icon\n                                                        className=\"card__topbar__icon\"\n                                                        fontSize=\"small\"\n                                                        color={\n                                                            notification.icon\n                                                                .color\n                                                        }\n                                                    >\n                                                        {notification.icon.name}\n                                                    </Icon>\n                                                </div>\n                                                <span className=\"ml-4 font-medium text-muted\">\n                                                    {notification.heading}\n                                                </span>\n                                            </div>\n                                            <small className=\"card__topbar__time text-muted\">\n                                                {getTimeDifference(\n                                                    new Date(\n                                                        notification.timestamp\n                                                    )\n                                                )}{' '}\n                                                ago\n                                            </small>\n                                        </div>\n                                        <div className=\"px-4 pt-2 pb-4\">\n                                            <p className=\"m-0\">\n                                                {notification.title}\n                                            </p>\n                                            <small className=\"text-muted\">\n                                                {notification.subtitle}\n                                            </small>\n                                        </div>\n                                    </Card>\n                                </Link>\n                            </div>\n                        ))}\n                        {!!notifications?.length && (\n                            <div className=\"text-center\">\n                                <Button onClick={clearNotifications}>\n                                    Clear Notifications\n                                </Button>\n                            </div>\n                        )}\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default NotificationBar\n","import React, { Fragment, useState } from 'react'\nimport { Icon, Badge, IconButton, Drawer, Button } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n} from 'app/redux/actions/EcommerceActions'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useSettings from 'app/hooks/useSettings'\nimport useAuth from 'app/hooks/useAuth'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    miniCart: {\n        width: 'var(--sidenav-width)',\n        '& .cart__topbar': {\n            height: 'var(--topbar-height)',\n        },\n        '& .mini-cart__item': {\n            transition: 'background 300ms ease',\n            '&:hover': {\n                background: 'rgba(0,0,0,0.01)',\n            },\n        },\n    },\n}))\n\nlet cartListLoaded = false\n\nfunction ShoppingCart({ container }) {\n    const [totalCost, setTotalCost] = useState(0)\n    const [panelOpen, setPanelOpen] = useState(false)\n\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { user } = useAuth()\n    const { cartList } = useSelector((state) => state.ecommerce)\n    const { settings } = useSettings()\n\n    if (!cartListLoaded) {\n        dispatch(getCartList(user.id))\n        cartListLoaded = true\n    }\n\n    const handleDrawerToggle = () => {\n        setPanelOpen(!panelOpen)\n    }\n\n    const handleCheckoutClick = () => {\n        if (totalCost > 0) {\n            history.push('/ecommerce/checkout')\n            setPanelOpen(false)\n        }\n    }\n\n    useEffect(() => {\n        let total = 0\n\n        cartList.forEach((product) => {\n            total += product.price * product.amount\n        })\n\n        setTotalCost(total)\n    }, [cartList])\n\n    return (\n        <Fragment>\n            <IconButton onClick={handleDrawerToggle}>\n                <Badge color=\"secondary\" badgeContent={cartList.length}>\n                    <Icon>shopping_cart</Icon>\n                </Badge>\n            </IconButton>\n\n            <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n                <Drawer\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={'right'}\n                    open={panelOpen}\n                    onClose={handleDrawerToggle}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div\n                        className={clsx('flex-column h-full', classes.miniCart)}\n                    >\n                        <div className=\"cart__topbar elevation-z6 flex items-center p-1 mb-2 pl-4\">\n                            <Icon color=\"primary\">shopping_cart</Icon>\n                            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\n                        </div>\n\n                        <div className=\"flex-grow overflow-auto\">\n                            {cartList.map((product) => (\n                                <div\n                                    key={product.id}\n                                    className=\"mini-cart__item flex items-center py-2 px-2\"\n                                >\n                                    <div className=\"flex flex-column mr-1\">\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount + 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon className=\"cursor-pointer\">\n                                                keyboard_arrow_up\n                                            </Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            disabled={!(product.amount - 1)}\n                                            size=\"small\"\n                                            onClick={() =>\n                                                dispatch(\n                                                    updateCartAmount(\n                                                        user.id,\n                                                        product.id,\n                                                        product.amount - 1\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            <Icon className=\"cursor-pointer\">\n                                                keyboard_arrow_down\n                                            </Icon>\n                                        </IconButton>\n                                    </div>\n                                    <div className=\"mr-2\">\n                                        <img\n                                            className=\"w-48\"\n                                            src={product.imgUrl}\n                                            alt={product.title}\n                                        />\n                                    </div>\n                                    <div className=\"mr-2 text-center flex-grow flex-column\">\n                                        <h6 className=\"m-0 mb-1 ellipsis w-120\">\n                                            {product.title}\n                                        </h6>\n                                        <small className=\"text-muted\">\n                                            ${product.price} x {product.amount}\n                                        </small>\n                                    </div>\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() =>\n                                            dispatch(\n                                                deleteProductFromCart(\n                                                    user.userId,\n                                                    product.id\n                                                )\n                                            )\n                                        }\n                                    >\n                                        <Icon fontSize=\"small\">clear</Icon>\n                                    </IconButton>\n                                </div>\n                            ))}\n                        </div>\n\n                        <Button\n                            className=\"w-full border-radius-0\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleCheckoutClick}\n                        >\n                            Checkout (${totalCost.toFixed(2)})\n                        </Button>\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n        </Fragment>\n    )\n}\n\nexport default ShoppingCart\n","import React from 'react'\nimport {\n    Icon,\n    IconButton,\n    MenuItem,\n    Avatar,\n    useMediaQuery,\n    Hidden,\n} from '@material-ui/core'\nimport { MatxMenu, MatxSearchBox } from 'app/components'\nimport NotificationBar from '../../NotificationBar/NotificationBar'\nimport { Link } from 'react-router-dom'\nimport ShoppingCart from '../../ShoppingCart/ShoppingCart'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useAuth from 'app/hooks/useAuth'\nimport useSettings from 'app/hooks/useSettings'\nimport { NotificationProvider } from 'app/contexts/NotificationContext'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    topbar: {\n        top: 0,\n        zIndex: 96,\n        transition: 'all 0.3s ease',\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n\n        '& .topbar-hold': {\n            backgroundColor: palette.primary.main,\n            height: 80,\n            paddingLeft: 18,\n            paddingRight: 20,\n            [theme.breakpoints.down('sm')]: {\n                paddingLeft: 16,\n                paddingRight: 16,\n            },\n            [theme.breakpoints.down('xs')]: {\n                paddingLeft: 14,\n                paddingRight: 16,\n            },\n        },\n        '& .fixed': {\n            boxShadow: theme.shadows[8],\n            height: 64,\n        },\n    },\n    userMenu: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        borderRadius: 24,\n        padding: 4,\n        '& span': {\n            margin: '0 8px',\n            // color: palette.text.secondary\n        },\n    },\n    menuItem: {\n        display: 'flex',\n        alignItems: 'center',\n        minWidth: 185,\n    },\n}))\n\nconst Layout1Topbar = () => {\n    const theme = useTheme()\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n    const { logout, user } = useAuth()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n    const fixed = settings?.layout1Settings?.topbar?.fixed\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidebarToggle = () => {\n        let { layout1Settings } = settings\n        let mode\n\n        if (isMdScreen) {\n            mode =\n                layout1Settings.leftSidebar.mode === 'close'\n                    ? 'mobile'\n                    : 'close'\n        } else {\n            mode =\n                layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full'\n        }\n\n        updateSidebarMode({ mode })\n    }\n\n    return (\n        <div className={classes.topbar}>\n            <div className={clsx({ 'topbar-hold': true, fixed: fixed })}>\n                <div className=\"flex justify-between items-center h-full\">\n                    <div className=\"flex\">\n                        <IconButton\n                            onClick={handleSidebarToggle}\n                            className=\"hide-on-pc\"\n                        >\n                            <Icon>menu</Icon>\n                        </IconButton>\n\n                        <div className=\"hide-on-mobile\">\n                            <IconButton>\n                                <Icon>mail_outline</Icon>\n                            </IconButton>\n\n                            <IconButton>\n                                <Icon>web_asset</Icon>\n                            </IconButton>\n\n                            <IconButton>\n                                <Icon>star_outline</Icon>\n                            </IconButton>\n                        </div>\n                    </div>\n                    <div className=\"flex items-center\">\n                        <MatxSearchBox />\n                        <NotificationProvider>\n                            <NotificationBar />\n                        </NotificationProvider>\n\n                        {/* <NotificationBar2 /> */}\n\n                        <ShoppingCart />\n\n                        <MatxMenu\n                            menuButton={\n                                <div className={classes.userMenu}>\n                                    <Hidden xsDown>\n                                        <span>\n                                            Hi <strong>{user.name}</strong>\n                                        </span>\n                                    </Hidden>\n                                    <Avatar\n                                        className=\"cursor-pointer\"\n                                        src={user.avatar}\n                                    />\n                                </div>\n                            }\n                        >\n                            <MenuItem>\n                                <Link className={classes.menuItem} to=\"/\">\n                                    <Icon> home </Icon>\n                                    <span className=\"pl-4\"> Home </span>\n                                </Link>\n                            </MenuItem>\n                            <MenuItem>\n                                <Link\n                                    className={classes.menuItem}\n                                    to=\"/page-layouts/user-profile\"\n                                >\n                                    <Icon> person </Icon>\n                                    <span className=\"pl-4\"> Profile </span>\n                                </Link>\n                            </MenuItem>\n                            <MenuItem className={classes.menuItem}>\n                                <Icon> settings </Icon>\n                                <span className=\"pl-4\"> Settings </span>\n                            </MenuItem>\n                            <MenuItem\n                                onClick={logout}\n                                className={classes.menuItem}\n                            >\n                                <Icon> power_settings_new </Icon>\n                                <span className=\"pl-4\"> Logout </span>\n                            </MenuItem>\n                        </MatxMenu>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Layout1Topbar)\n","import React, { Fragment } from 'react'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { navigations } from 'app/navigations'\nimport { MatxVerticalNav } from 'app/components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    scrollable: {\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    sidenavMobileOverlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: '100vw',\n        background: 'rgba(0, 0, 0, 0.54)',\n        zIndex: -1,\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n}))\n\nconst Sidenav = ({ children }) => {\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    const updateSidebarMode = (sidebarSettings) => {\n        let activeLayoutSettingsName = settings.activeLayout + 'Settings'\n        let activeLayoutSettings = settings[activeLayoutSettingsName]\n\n        updateSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    return (\n        <Fragment>\n            <Scrollbar\n                options={{ suppressScrollX: true }}\n                className={clsx('relative px-4', classes.scrollable)}\n            >\n                {children}\n                <MatxVerticalNav items={navigations} />\n            </Scrollbar>\n\n            <div\n                onClick={() => updateSidebarMode({ mode: 'close' })}\n                className={classes.sidenavMobileOverlay}\n            />\n        </Fragment>\n    )\n}\n\nexport default Sidenav\n","import React from 'react'\nimport { MatxLogo } from 'app/components'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    brand: {\n        padding: '20px 18px 20px 29px',\n    },\n    hideOnCompact: {\n        display: 'none',\n    },\n}))\n\nconst Brand = ({ children }) => {\n    const classes = useStyles()\n    const { settings } = useSettings()\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    return (\n        <div\n            className={clsx('flex items-center justify-between', classes.brand)}\n        >\n            <div className=\"flex items-center\">\n                <MatxLogo />\n                <span\n                    className={clsx({\n                        'text-18 ml-2 font-medium sidenavHoverShow': true,\n                        [classes.hideOnCompact]: mode === 'compact',\n                    })}\n                >\n                    Matx\n                </span>\n            </div>\n            <div\n                className={clsx({\n                    sidenavHoverShow: true,\n                    [classes.hideOnCompact]: mode === 'compact',\n                })}\n            >\n                {children || null}\n            </div>\n        </div>\n    )\n}\n\nexport default Brand\n","import React from 'react'\nimport { useTheme, makeStyles } from '@material-ui/core/styles'\n\nimport Sidenav from '../../Sidenav/Sidenav'\nimport Brand from '../../Brand/Brand'\nimport { Switch, Hidden } from '@material-ui/core'\nimport { convertHexToRGB } from 'utils'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    sidenav: ({ width, primaryRGB, bgImgURL }) => ({\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        width: width,\n        boxShadow: theme.shadows[8],\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'top',\n        backgroundSize: 'cover',\n        zIndex: 111,\n        overflow: 'hidden',\n        color: palette.text.primary,\n        transition: 'all 250ms ease-in-out',\n        backgroundImage: `linear-gradient(to bottom, rgba(${primaryRGB}, 0.96), rgba(${primaryRGB}, 0.96)), url(${bgImgURL})`,\n        '&:hover': {\n            width: 'var(--sidenav-width)',\n            '& .sidenavHoverShow': {\n                display: 'block',\n            },\n            '& .compactNavItem': {\n                width: '100%',\n                maxWidth: '100%',\n                '& .nav-bullet': {\n                    display: 'block',\n                },\n                '& .nav-bullet-text': {\n                    display: 'none',\n                },\n            },\n        },\n    }),\n    hideOnCompact: {\n        display: 'none',\n    },\n    userInfo: {},\n}))\n\nconst Layout1Sidenav = () => {\n    const theme = useTheme()\n\n    const { settings, updateSettings } = useSettings()\n\n    const leftSidebar = settings.layout1Settings.leftSidebar\n    const { mode } = leftSidebar\n\n    const getSidenavWidth = () => {\n        switch (mode) {\n            case 'compact':\n                return 'var(--sidenav-compact-width)'\n            default:\n                return 'var(--sidenav-width)'\n        }\n    }\n\n    const primaryRGB = convertHexToRGB(theme.palette.primary.main)\n    const classes = useStyles({\n        ...leftSidebar,\n        width: getSidenavWidth(),\n        primaryRGB,\n    })\n\n    const updateSidebarMode = (sidebarSettings) => {\n        updateSettings({\n            layout1Settings: {\n                leftSidebar: {\n                    ...sidebarSettings,\n                },\n            },\n        })\n    }\n\n    const handleSidenavToggle = () => {\n        updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' })\n    }\n\n    return (\n        <div className={classes.sidenav}>\n            <div className=\"flex-column relative h-full\">\n                <Brand>\n                    <Hidden smDown>\n                        <Switch\n                            onChange={handleSidenavToggle}\n                            checked={leftSidebar.mode !== 'full'}\n                            color=\"secondary\"\n                            size=\"small\"\n                        />\n                    </Hidden>\n                </Brand>\n                <Sidenav />\n            </div>\n        </div>\n    )\n}\n\nexport default React.memo(Layout1Sidenav)\n","import React from 'react'\nimport { ThemeProvider, makeStyles, useTheme } from '@material-ui/core/styles'\nimport { Button, Toolbar, AppBar } from '@material-ui/core'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    footer: {\n        minHeight: 'var(--topbar-height)',\n        '@media (max-width: 499px)': {\n            display: 'table',\n            width: '100%',\n            minHeight: 'auto',\n            padding: '1rem 0',\n            '& .container': {\n                flexDirection: 'column !important',\n                '& a': {\n                    margin: '0 0 16px !important',\n                },\n            },\n        },\n    },\n    appbar: {\n        zIndex: 96,\n    },\n}))\n\nconst Footer = () => {\n    const classes = useStyles()\n    const theme = useTheme()\n    const { settings } = useSettings()\n\n    const footerTheme = settings.themes[settings.footer.theme] || theme\n\n    return (\n        <ThemeProvider theme={footerTheme}>\n            <AppBar\n                color=\"primary\"\n                position=\"static\"\n                className={classes.appbar}\n            >\n                <Toolbar className={clsx('flex items-center', classes.footer)}>\n                    <div className=\"flex items-center container w-full\">\n                        {/* <a\n              href=\"https://github.com/uilibrary/matx-react\"\n              target=\"_blank\"\n              className=\"mr-2\"\n              rel=\"noopener noreferrer\"\n            >\n              <Button variant=\"contained\">Download Free version</Button>\n            </a> */}\n                        <a href=\"https://material-ui.com/store/items/matx-pro-react-dashboard-template/\">\n                            <Button variant=\"contained\" color=\"secondary\">\n                                Get MatX Pro\n                            </Button>\n                        </a>\n                        <span className=\"m-auto\"></span>\n                        <p className=\"m-0\">\n                            Design and Developed by{' '}\n                            <a href=\"http://ui-lib.com\">UI Lib</a>\n                        </p>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </ThemeProvider>\n    )\n}\n\nexport default Footer\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\nimport { Fab, IconButton, Icon } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    toggle: {\n        position: 'fixed',\n        right: '30px',\n        bottom: '50px',\n        zIndex: 99,\n        transition: 'all 0.15s ease',\n        '&.open': {\n            right: '10px',\n        },\n    },\n}))\n\nconst SecondarySidebarToggle = () => {\n    // const isMobile = useMediaQuery(\"(max-width:767px)\");\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    const toggle = () => {\n        updateSettings({\n            secondarySidebar: { open: !settings.secondarySidebar.open },\n        })\n    }\n\n    // useEffect(() => {\n    //   updateSettings({\n    //     secondarySidebar: { open: !isMobile },\n    //   });\n    // }, [isMobile]);\n\n    return (\n        <div\n            className={clsx({\n                [classes.toggle]: true,\n                open: settings.secondarySidebar.open,\n            })}\n        >\n            {settings.secondarySidebar.open && (\n                <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\n                    <Icon>close</Icon>\n                </IconButton>\n            )}\n            {!settings.secondarySidebar.open && (\n                <Fab\n                    // variant=\"extended\"\n                    // size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"expand\"\n                    className=\"\"\n                    onClick={toggle}\n                >\n                    <Icon>settings</Icon>\n                </Fab>\n            )}\n        </div>\n    )\n}\n\nexport default SecondarySidebarToggle\n","import { Badge } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst BadgeSelected = withStyles((theme) => ({\n    badge: {\n        top: '0',\n        right: '0',\n        height: '32px',\n        width: '32px',\n        borderRadius: '50%',\n    },\n}))(Badge)\n\nexport default BadgeSelected\n","import React, { Fragment, useState } from 'react'\nimport {\n    Icon,\n    IconButton,\n    Button,\n    // FormGroup,\n    // Switch,\n    // FormControlLabel,\n    // FormControl,\n    // FormLabel,\n    Card,\n    Tooltip,\n    Drawer,\n    Link,\n} from '@material-ui/core'\nimport Scrollbar from 'react-perfect-scrollbar'\n// import Layout1Customizer from \"./Layout1Customizer\";\n// import Layout2Customizer from \"./Layout2Customizer\";\n// import { themeColors } from \"../../MatxTheme/themeColors\";\nimport BadgeSelected from './BadgeSelected'\n// import { mainThemes, topbarThemes } from \"./customizerOptions\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles'\nimport clsx from 'clsx'\n\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    label: {\n        color: palette.secondary.main,\n        backgroundColor: palette.primary.dark,\n        fontWeight: 700,\n        transform: 'rotate(90deg)',\n        marginBottom: '2.5rem',\n        padding: '.25rem .5rem',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        letterSpacing: '1.5px',\n        fontSize: '1rem',\n        '&:hover, &.open': {\n            backgroundColor: palette.secondary.main,\n            color: palette.secondary.contrastText,\n        },\n    },\n    helpText: {\n        margin: '0px .5rem 1rem',\n    },\n    maxCustomizer: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        zIndex: 50,\n    },\n    customizerCloseButton: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n    },\n    layoutBox: {\n        '&:hover': {\n            '& .layout-name': {\n                position: 'absolute',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100%',\n                width: '100%',\n                background: 'rgba(0,0,0,0.3)',\n                zIndex: 12,\n            },\n        },\n    },\n}))\n\nconst MatxCustomizer = (props) => {\n    const [open, setOpen] = useState(false)\n    const [tabIndex, setTabIndex] = useState(0)\n\n    const classes = useStyles()\n    const { settings, updateSettings } = useSettings()\n\n    // const handleChange = (name, value) => {\n    //   let updatedSettings = set(settings, name, value);\n\n    //   updateSettings(updatedSettings);\n    // };\n\n    // const handleControlChange = (name) => (event) => {\n    //   let controlValue =\n    //     event.target.type === \"checkbox\"\n    //       ? event.target.checked\n    //       : event.target.value;\n    //   handleChange(name, controlValue);\n    // };\n\n    const tooglePanel = () => {\n        setOpen(!open)\n    }\n    const handleTabChange = (index) => {\n        setTabIndex(index)\n    }\n\n    let activeTheme = { ...settings.themes[settings.activeTheme] }\n\n    return (\n        <Fragment>\n            <Tooltip title=\"Theme Settings\" placement=\"left\">\n                <span\n                    className={clsx({ [classes.label]: true, open })}\n                    onClick={tooglePanel}\n                >\n                    DEMOS\n                </span>\n            </Tooltip>\n\n            {/* {open && ( */}\n            <ThemeProvider theme={activeTheme}>\n                <Drawer\n                    anchor={'right'}\n                    open={open}\n                    variant=\"temporary\"\n                    onClose={tooglePanel}\n                    ModalProps={{\n                        keepMounted: true,\n                    }}\n                >\n                    <div\n                        className={clsx(\n                            'flex-column w-320 pb-8 elevation-z12 h-full-screen bg-default',\n                            classes.maxCustomizer\n                        )}\n                    >\n                        <div className=\"flex items-center px-5 py-4 mb-4 min-h-64 elevation-z6\">\n                            <Icon color=\"primary\">settings</Icon>\n                            <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\n                            <IconButton\n                                onClick={tooglePanel}\n                                className={classes.customizerCloseButton}\n                            >\n                                <Icon>close</Icon>\n                            </IconButton>\n                        </div>\n                        <div className=\"px-6 mb-4 flex\">\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 0 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(0)}\n                                className=\"mr-4\"\n                            >\n                                Demos\n                            </Button>\n                            <Button\n                                variant=\"outlined\"\n                                color={tabIndex === 1 ? 'secondary' : 'primary'}\n                                onClick={() => handleTabChange(1)}\n                            >\n                                Settings\n                            </Button>\n                        </div>\n\n                        <Scrollbar\n                            options={{ suppressScrollX: true }}\n                            className=\"px-4\"\n                        >\n                            {tabIndex === 0 && (\n                                <div className=\"mb-8 mx-2\">\n                                    <div className=\"text-muted\">Layouts</div>\n\n                                    <div className=\"flex-column\">\n                                        {demoLayouts.map((layout) => (\n                                            <BadgeSelected\n                                                color=\"secondary\"\n                                                className={clsx(\n                                                    'w-full my-3 max-h-152 cursor-pointer',\n                                                    classes.layoutBox\n                                                )}\n                                                badgeContent={'Pro'}\n                                                invisible={!layout.isPro}\n                                                key={layout.name}\n                                            >\n                                                <Card\n                                                    className=\"relative\"\n                                                    onClick={() =>\n                                                        updateSettings(\n                                                            layout.options\n                                                        )\n                                                    }\n                                                    elevation={4}\n                                                >\n                                                    <div className=\"layout-name hidden\">\n                                                        <Button\n                                                            variant=\"contained\"\n                                                            color=\"secondary\"\n                                                        >\n                                                            {layout.name}\n                                                        </Button>\n                                                    </div>\n\n                                                    <img\n                                                        className=\"w-full\"\n                                                        src={layout.thumbnail}\n                                                        alt={layout.name}\n                                                    />\n                                                </Card>\n                                            </BadgeSelected>\n                                        ))}\n                                    </div>\n                                </div>\n                            )}\n\n                            {/* END LAYOUT */}\n\n                            {tabIndex === 1 && (\n                                <div>\n                                    <div className={classes.helpText}>\n                                        We used React context API to control\n                                        layout. Check out the{' '}\n                                        <Link\n                                            href=\"http://demos.ui-lib.com/matx-react-doc/layout.html\"\n                                            target=\"_blank\"\n                                        >\n                                            Documentation\n                                        </Link>\n                                    </div>\n                                    \n                                </div>\n                            )}\n                        </Scrollbar>\n                    </div>\n                </Drawer>\n            </ThemeProvider>\n            {/* )} */}\n        </Fragment>\n    )\n}\n\nconst demoLayouts = [\n    {\n        name: 'Light Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'whiteBlue',\n                    bgOpacity: 0.98,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Compact Sidebar',\n        thumbnail: '/assets/images/screenshots/layout5-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'compact',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'whiteBlue',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Sidebar',\n        thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\n        isPro: false,\n        options: {\n            activeLayout: 'layout1',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'blueDark',\n                    fixed: true,\n                },\n            },\n        },\n    },\n    {\n        name: 'Dark Theme',\n        thumbnail: '/assets/images/screenshots/layout3-customizer.png',\n        isPro: true,\n        options: {\n            activeLayout: 'layout2',\n            activeTheme: 'blue',\n            layout1Settings: {\n                leftSidebar: {\n                    mode: 'full',\n                    theme: 'slateDark1',\n                    bgOpacity: 0.92,\n                },\n                topbar: {\n                    theme: 'purpleDark1',\n                    fixed: true,\n                },\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n    {\n        name: 'Horizontal Navigation',\n        thumbnail: '/assets/images/screenshots/layout4-customizer.png',\n        isPro: true,\n        options: {\n            activeLayout: 'layout2',\n            activeTheme: 'purple1',\n            layout2Settings: {\n                mode: 'full',\n            },\n            footer: {\n                theme: 'slateDark1',\n            },\n        },\n    },\n]\n\nexport default MatxCustomizer\n","import React from 'react'\nimport { IconButton, Icon } from '@material-ui/core'\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer'\nimport ShoppingCart from '../ShoppingCart/ShoppingCart'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { ChatHead } from 'app/components'\nimport { Chatbox } from 'app/components'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    root: {\n        position: 'fixed',\n        height: '100vh',\n        width: (props) => props.width,\n        right: 0,\n        bottom: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        boxShadow: theme.shadows[8],\n        backgroundColor: palette.primary.main,\n        zIndex: 98,\n        transition: 'all 0.15s ease',\n    },\n    '@global': {\n        '@media screen and (min-width: 767px)': {\n            '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\n                marginRight: (props) => props.width,\n            },\n            '.matx-customizer': {\n                right: (props) => props.width,\n            },\n        },\n        '@media screen and (max-width: 959px)': {\n            '.toolbar-menu-wrap .menu-area': {\n                width: (props) => `calc(100% - ${props.width})`,\n            },\n        },\n    },\n}))\n\nconst SecondarySidebarContent = () => {\n    const classes = useStyles({ width: '50px' })\n\n    return (\n        <div className={clsx('secondary-sidebar', classes.root)}>\n            <span className=\"m-auto\"></span>\n\n            <MatxCustomizer />\n\n            <ShoppingCart />\n\n            <ChatHead\n                icon={\n                    <IconButton className=\"my-3\" size=\"small\">\n                        <Icon>comments</Icon>\n                    </IconButton>\n                }\n            >\n                <Chatbox />\n            </ChatHead>\n\n            <span className=\"m-auto\"></span>\n        </div>\n    )\n}\n\nexport default SecondarySidebarContent\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\n    return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\nexport default SecondarySidenavTheme\n","import React from 'react'\nimport SecondarySidebarToggle from './SecondarySidebarToggle'\nimport SecondarySidebarContent from './SecondarySidebarContent'\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme'\nimport useSettings from 'app/hooks/useSettings'\n\nconst SecondarySidebar = () => {\n    const { settings } = useSettings()\n    const secondarySidebarTheme =\n        settings.themes[settings.secondarySidebar.theme]\n\n    return (\n        <SecondarySidenavTheme theme={secondarySidebarTheme}>\n            {settings.secondarySidebar.open && <SecondarySidebarContent />}\n            <SecondarySidebarToggle />\n        </SecondarySidenavTheme>\n    )\n}\n\nexport default SecondarySidebar\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/core/styles'\nimport useSettings from 'app/hooks/useSettings'\n\nconst SidenavTheme = ({ children }) => {\n    const theme = useTheme()\n    const { settings } = useSettings()\n    const sidenavTheme =\n        settings.themes[settings.layout1Settings.leftSidebar.theme] || theme\n\n    return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>\n}\n\nexport default SidenavTheme\n","import React, { useContext, useEffect, useRef } from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { useMediaQuery } from '@material-ui/core'\nimport Scrollbar from 'react-perfect-scrollbar'\nimport { renderRoutes } from 'react-router-config'\nimport Layout1Topbar from './Layout1Topbar'\nimport Layout1Sidenav from './Layout1Sidenav'\nimport Footer from '../../Footer/Footer'\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar'\nimport AppContext from 'app/contexts/AppContext'\nimport { MatxSuspense } from 'app/components'\nimport { useTheme } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme'\nimport { makeStyles } from '@material-ui/core/styles'\nimport useSettings from 'app/hooks/useSettings'\n\nconst useStyles = makeStyles(({ palette, ...theme }) => ({\n    contentWrap: ({ width, secondarySidebar }) => {\n        return {\n            verticalAlign: 'top',\n            marginLeft: width,\n            transition: 'all 0.3s ease',\n            // [theme.breakpoints.up(\"sm\")]: {\n            marginRight: secondarySidebar.open ? 50 : 0,\n            // },\n        }\n    },\n    topbar: {\n        top: 0,\n        zIndex: 96,\n        background:\n            'linear-gradient(180deg, rgba(255, 255, 255, 0.95) 44%, rgba(247, 247, 247, 0.4) 50%, rgba(255, 255, 255, 0))',\n        transition: 'all 0.3s ease',\n    },\n}))\n\nconst Layout1 = () => {\n    const { settings, updateSettings } = useSettings()\n    const { layout1Settings, secondarySidebar } = settings\n    const {\n        leftSidebar: { mode: sidenavMode, show: showSidenav },\n    } = layout1Settings\n    const { routes } = useContext(AppContext)\n\n    const getSidenavWidth = () => {\n        switch (sidenavMode) {\n            case 'full':\n                return 'var(--sidenav-width)'\n            case 'compact':\n                return 'var(--sidenav-compact-width)'\n            default:\n                return '0px'\n        }\n    }\n\n    const sidenavWidth = getSidenavWidth()\n    let classes = useStyles({ width: sidenavWidth, secondarySidebar })\n    const theme = useTheme()\n    const isMdScreen = useMediaQuery(theme.breakpoints.down('md'))\n\n    const ref = useRef({ isMdScreen, settings })\n\n    const topbarTheme = settings.themes[layout1Settings.topbar.theme]\n    const layoutClasses = `theme-${theme.palette.type} flex`\n\n    useEffect(() => {\n        let { settings } = ref.current\n        let sidebarMode = settings.layout1Settings.leftSidebar.mode\n        if (settings.layout1Settings.leftSidebar.show) {\n            let mode = isMdScreen ? 'close' : sidebarMode\n            updateSettings({ layout1Settings: { leftSidebar: { mode } } })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMdScreen])\n\n    return (\n        <div className={clsx('bg-default', layoutClasses)}>\n            {showSidenav && sidenavMode !== 'close' && (\n                <SidenavTheme>\n                    <Layout1Sidenav />\n                </SidenavTheme>\n            )}\n\n            <div\n                className={clsx(\n                    'flex-grow flex-column relative overflow-hidden h-full-screen',\n                    classes.contentWrap\n                )}\n            >\n                {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n                    <ThemeProvider theme={topbarTheme}>\n                        <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n                    </ThemeProvider>\n                )}\n\n                {settings.perfectScrollbar && (\n                    <Scrollbar className=\"flex-grow flex-column relative h-full\">\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <div className=\"relative flex-grow\">\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </Scrollbar>\n                )}\n\n                {!settings.perfectScrollbar && (\n                    <div className=\"flex-grow flex-column relative h-full scroll-y\">\n                        {layout1Settings.topbar.show &&\n                            !layout1Settings.topbar.fixed && (\n                                <ThemeProvider theme={topbarTheme}>\n                                    <Layout1Topbar />\n                                </ThemeProvider>\n                            )}\n                        <div className=\"relative flex-grow\">\n                            <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n                        </div>\n                        {settings.footer.show && !settings.footer.fixed && (\n                            <Footer />\n                        )}\n                    </div>\n                )}\n\n                {settings.footer.show && settings.footer.fixed && <Footer />}\n            </div>\n            {settings.secondarySidebar.show && <SecondarySidebar />}\n        </div>\n    )\n}\n\nexport default React.memo(Layout1)\n"],"sourceRoot":""}