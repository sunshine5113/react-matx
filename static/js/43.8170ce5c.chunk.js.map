{"version":3,"sources":["app/views/material-kit/tables/SimpleTable.jsx","app/views/material-kit/tables/PaginationTable.jsx","app/views/material-kit/tables/AppTable.jsx"],"names":["subscribarList","name","date","amount","status","company","SimpleTable","className","Table","TableHead","TableRow","TableCell","TableBody","map","subscriber","index","key","align","IconButton","Icon","color","PaginationTable","React","useState","rowsPerPage","setRowsPerPage","page","setPage","slice","TablePagination","rowsPerPageOptions","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","event","newPage","onChangeRowsPerPage","target","value","AppTable","routeSegments","path","title"],"mappings":"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","file":"static/js/43.8170ce5c.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    Table,\n    TableHead,\n    TableCell,\n    TableBody,\n    IconButton,\n    Icon,\n    TableRow,\n} from '@material-ui/core'\n\nconst subscribarList = [\n    {\n        name: 'john doe',\n        date: '18 january, 2019',\n        amount: 1000,\n        status: 'close',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'james cassegne',\n        date: '8 january, 2019',\n        amount: 5000,\n        status: 'close',\n        company: 'Collboy Tech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n]\n\nconst SimpleTable = () => {\n    return (\n        <div className=\"w-full overflow-auto\">\n            <Table className=\"whitespace-pre\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell className=\"px-0\">Name</TableCell>\n                        <TableCell className=\"px-0\">Company</TableCell>\n                        <TableCell className=\"px-0\">Start Date</TableCell>\n                        <TableCell className=\"px-0\">Status</TableCell>\n                        <TableCell className=\"px-0\">Amount</TableCell>\n                        <TableCell className=\"px-0\">Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {subscribarList.map((subscriber, index) => (\n                        <TableRow key={index}>\n                            <TableCell className=\"px-0 capitalize\" align=\"left\">\n                                {subscriber.name}\n                            </TableCell>\n                            <TableCell className=\"px-0 capitalize\" align=\"left\">\n                                {subscriber.company}\n                            </TableCell>\n                            <TableCell className=\"px-0 capitalize\" align=\"left\">\n                                {subscriber.date}\n                            </TableCell>\n                            <TableCell className=\"px-0 capitalize\">\n                                {subscriber.status}\n                            </TableCell>\n                            <TableCell className=\"px-0 capitalize\">\n                                ${subscriber.amount}\n                            </TableCell>\n                            <TableCell className=\"px-0\">\n                                <IconButton>\n                                    <Icon color=\"error\">close</Icon>\n                                </IconButton>\n                            </TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    )\n}\n\nexport default SimpleTable\n","import React from 'react'\nimport {\n    IconButton,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n    Icon,\n    TablePagination,\n} from '@material-ui/core'\n\nconst subscribarList = [\n    {\n        name: 'john doe',\n        date: '18 january, 2019',\n        amount: 1000,\n        status: 'close',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'kessy bryan',\n        date: '10 january, 2019',\n        amount: 9000,\n        status: 'open',\n        company: 'My Fintech LTD.',\n    },\n    {\n        name: 'james cassegne',\n        date: '8 january, 2019',\n        amount: 5000,\n        status: 'close',\n        company: 'Collboy Tech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n    {\n        name: 'lucy brown',\n        date: '1 january, 2019',\n        amount: 89000,\n        status: 'open',\n        company: 'ABC Fintech LTD.',\n    },\n]\n\nconst PaginationTable = () => {\n    const [rowsPerPage, setRowsPerPage] = React.useState(5)\n    const [page, setPage] = React.useState(0)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    return (\n        <div className=\"w-full overflow-auto\">\n            <Table className=\"whitespace-pre\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell className=\"px-0\">Name</TableCell>\n                        <TableCell className=\"px-0\">Company</TableCell>\n                        <TableCell className=\"px-0\">Start Date</TableCell>\n                        <TableCell className=\"px-0\">Status</TableCell>\n                        <TableCell className=\"px-0\">Amount</TableCell>\n                        <TableCell className=\"px-0\">Action</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {subscribarList\n                        .slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                        )\n                        .map((subscriber, index) => (\n                            <TableRow key={index}>\n                                <TableCell\n                                    className=\"px-0 capitalize\"\n                                    align=\"left\"\n                                >\n                                    {subscriber.name}\n                                </TableCell>\n                                <TableCell\n                                    className=\"px-0 capitalize\"\n                                    align=\"left\"\n                                >\n                                    {subscriber.company}\n                                </TableCell>\n                                <TableCell\n                                    className=\"px-0 capitalize\"\n                                    align=\"left\"\n                                >\n                                    {subscriber.date}\n                                </TableCell>\n                                <TableCell className=\"px-0 capitalize\">\n                                    {subscriber.status}\n                                </TableCell>\n                                <TableCell className=\"px-0 capitalize\">\n                                    ${subscriber.amount}\n                                </TableCell>\n                                <TableCell className=\"px-0\">\n                                    <IconButton>\n                                        <Icon color=\"error\">close</Icon>\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n\n            <TablePagination\n                className=\"px-4\"\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={subscribarList.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                backIconButtonProps={{\n                    'aria-label': 'Previous Page',\n                }}\n                nextIconButtonProps={{\n                    'aria-label': 'Next Page',\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n        </div>\n    )\n}\n\nexport default PaginationTable\n","import React from 'react'\nimport SimpleTable from './SimpleTable'\nimport PaginationTable from './PaginationTable'\nimport { Breadcrumb, SimpleCard } from 'app/components'\n\nconst AppTable = () => {\n    return (\n        <div className=\"m-sm-30\">\n            <div className=\"mb-sm-30\">\n                <Breadcrumb\n                    routeSegments={[\n                        { name: 'Material', path: '/material' },\n                        { name: 'Table' },\n                    ]}\n                />\n            </div>\n            <SimpleCard title=\"Simple Table\">\n                <SimpleTable />\n            </SimpleCard>\n            <div className=\"py-3\" />\n            <SimpleCard title=\"Pagination Table\">\n                <PaginationTable />\n            </SimpleCard>\n        </div>\n    )\n}\n\nexport default AppTable\n"],"sourceRoot":""}